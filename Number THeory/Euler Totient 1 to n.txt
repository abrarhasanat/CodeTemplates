
    ///////////Euler totient  from 1 to n //////////////

#include <bits/stdc++.h>
#include <chrono>
#define  mx 5000005
#define  ll unsigned long long
#define  pii pair<int,int>
#define  debug printf("%d\n", bug++);
#define  For(i,n) for(int i = 0; i < n; ++i)
#define  INF 1 << 31
#define  mod  1000000007
using  namespace std;
int bug = 1;
ll phi[mx + 1];
void calc(){
    For(i , mx + 1) phi[i] = i;
    for(int i = 2; i <= mx ; ++i){
        if(phi[i] == i){
            phi[i] = i - 1;
            for(int j = 2*i ;j <= mx ; j += i){
                phi[j] -= phi[j]/i;
            }
        }
    }
}
void precalc(){
   phi[0] = phi[1]  = 0;
    for(int i = 3 ;i < mx ;++i){
        phi[i] = phi[i-1] + (phi[i] * phi[i]);
    }
}

int main(){
    int t;
    scanf("%d", &t);
    calc() ;
    precalc();
    For(tc ,t){
        int a, b;
        scanf("%d %d",&a, &b);
        printf("Case %d: ", tc + 1);
        cout << phi[b] - phi[a - 1] << endl;
    }
}
