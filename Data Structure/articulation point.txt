#include <bits/stdc++.h>
#define  mx 100005
#define  ll long long
#define  pii pair<int,int>
#define  debug printf("%d\n", bug++);
#define  For(i,n) for(int i = 0; i < n; ++i)
#define  INF 1 << 20
using namespace std;
int bug = 1;
int tym = 0 ;
int low[mx];
int d[mx];
int  visited[mx];
int  cut_p[mx];
vector<int>edge[mx];
void Find(int u , int p){
    low[u] = d[u] = ++tym;
    visited[u] = 1;
    int child = 0;
    for(auto v : edge[u]){
        if(u == v) continue;
        if(visited[v]){
            low[u] = min(low[u] , d[v]);
        }
        if(!visited[v]){
            Find(v,u);
            low[u] = min(low[u], low[v]);
            if(d[u] <= low[v] &&  p != -1)
                cut_p[u] = 1;
            ++child;
        }
    }
    if(p == -1 && child > 1)
        cut_p[u] = 1;
}
void allclear(int n) {
    tym = 0;
    For(i, n + 1) {
        low[i] = d[i] = visited[i] = cut_p[i] = 0;
        edge[i].clear();
    }
}
int main()
{
    int t;
    scanf("%d", &t);
    For(tc,t){
        int n,m;
        scanf("%d %d", &n, &m);
        allclear(n);
        For(i,m){
            int a,b;
            scanf("%d %d", &a, &b);
            edge[a].push_back(b);
            edge[b].push_back(a);
        }
        Find(1, -1);
        int ans = 0;
        For(i,n){
            if(cut_p[i + 1])
                ans++;
        }
        printf("Case %d: %d\n", tc + 1,ans);

    }
}



